# .github/workflows/ci-cd.yml

name: CI/CD Pipeline - Terraform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job de CI: Roda em todo push e pull request
  build_and_plan:
    name: Build and Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Configura as credenciais da AWS para o 'terraform plan'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Ou a região que você está usando

      - name: Inicializar Terraform
        run: terraform init
        working-directory: infra/

      - name: Checar formatação do Terraform
        run: terraform fmt -check
        working-directory: infra/

      - name: Validar código Terraform
        run: terraform validate
        working-directory: infra/
      
      - name: Gerar plano do Terraform
        run: terraform plan -no-color
        working-directory: infra/

  # Job de CD: Roda apenas após um merge na branch 'main'
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_plan # Depende do sucesso do job anterior
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Condição para rodar

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Inicializar Terraform
        run: terraform init
        working-directory: infra/

      - name: Aplicar mudanças do Terraform
        run: terraform apply -auto-approve
        working-directory: infra/
